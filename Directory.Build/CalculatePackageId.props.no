<!--
 CalculatePackageId.props
 
   Created: 2022-10-24-08:10:51
   Modified: 2022-10-29-02:46:55
 
   Author: Justin Chase <justin@justinwritescode.com>
   
   Copyright Â© 2022 Justin Chase, All Rights Reserved
      License: MIT (https://opensource.org/licenses/MIT)
-->

<Project InitialTargets="DisplayRootNamespace">
  <PropertyGroup Condition="'$(PackageIdIsCalculated)' != 'true'">
    <_GitRoot Condition="'$(_GitRoot)' == ''">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), ".git"))</_GitRoot>
    <_GitRoot Condition="'$(_GitRoot)' == ''">$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), ".git/HEAD"))</_GitRoot>
    <_RelativePath>$([MSBuild]::MakeRelative($(_GitRoot), $(MSBuildProjectDirectory)))</_RelativePath>

    <_RelativeNamespace>$([System.IO.Path]::GetFileName($(_GitRoot))).$(_RelativePath.Replace("\", ".").Replace("/", ".").Replace("src.", "").Replace("tests.", "").Replace($(MSBuildProjectExtension), ""))</_RelativeNamespace>
    <_RelativeNamespace>$(_RelativeNamespace.Replace("justinwritescode", "JustinWritesCode").Replace("JustinWritesCode.JustinWritesCode.", "JustinWritesCode."))</_RelativeNamespace>

    <!-- Remove duplicates, e.g., Microsoft.Microsoft becomes Microsoft. -->
    <_FixedRelativeNamespace>$([System.Text.RegularExpressions.Regex]::Replace($(_RelativeNamespace), "\.?(\w+)(.*)\.\1", "$1$2"))</_FixedRelativeNamespace>
    <_FixedRelativeNamespace>$([System.Text.RegularExpressions.Regex]::Replace($(_FixedRelativeNamespace), "^\.+", ""))</_FixedRelativeNamespace>
    <_FixedRelativeNamespace>$([System.Text.RegularExpressions.Regex]::Replace($(_FixedRelativeNamespace), "\.+", "."))</_FixedRelativeNamespace>
    <_FixedRelativeNamespace>$([System.Text.RegularExpressions.Regex]::Replace($(_FixedRelativeNamespace), "-(\w)", "\U$1"))</_FixedRelativeNamespace>
    <_FixedRelativeNamespace>$([System.Text.RegularExpressions.Regex]::Replace($(_FixedRelativeNamespace), "(.*)\.+", "$1"))</_FixedRelativeNamespace>
    <RootNamespace Condition="'$(UseJustinWritesCodeNamespace)' != 'false' And !$(_FixedRelativeNamespace.StartsWith('JustinWritesCode'))">JustinWritesCode.$(_FixedRelativeNamespace)</RootNamespace>
    <RootNamespace Condition="'$(UseJustinWritesCodeNamespace)' == 'false' Or $(_FixedRelativeNamespace.StartsWith('JustinWritesCode'))">$(_FixedRelativeNamespace)</RootNamespace>
    <RootNamespacePieces>$(RootNamespace.Split('.'))</RootNamespacePieces>
  </PropertyGroup>
  <!-- <ItemGroup>
    <RootNamespacePiece Include="$(RootNamespacePieces)" />
    <RootNamespaceUniquePiece Include="@(RootNamespacePiece->Distinct())" />
    <RootNamespace Include="@(RootNamespacePiece, '.')" />
  </ItemGroup> -->
  <PropertyGroup>
    <!-- <RootNamespace Condition="'$(RootNamespace)' != ''">@(RootNamespaceUniquePiece)</RootNamespace> -->
    <!-- <RootNamespace>$(RootNamespace.Replace(";", "."))</RootNamespace> -->
    <PackageId Condition="!$(PackageId.StartsWith('JustinWritesCode')) And '$(PackageIdOverride)' == ''">$(RootNamespace)</PackageId>
    <RootNamespace Condition="'$(RootNamespace)' == ''">$([System.Text.RegularExpressions.Regex]::Replace($(RootNamespace), "\-", ""))</RootNamespace>
    <!-- <PackageId Condition="'$(PackageId)' != ''">$(RootNamespace)</PackageId> -->
    <AssemblyName Condition="'$(AssemblyName)' == ''">$(RootNamespace)</AssemblyName>
    <!-- <PackageId Condition="'$(UseJustinWritesCodeNamespace)' != 'false'">JustinWritesCode.@(RelativeNamespacePiecesNoDups->'%(Identity)', '.')</PackageId>
    <PackageId Condition="'$(UseJustinWritesCodeNamespace)' == 'false'">@(RelativeNamespacePiecesNoDups->'%(Identity)', '.')</PackageId> -->
  </PropertyGroup>
  <PropertyGroup>
   <PackageId Condition="'$(PackageIdOverride)' != ''">$(PackageIdOverride)</PackageId>
   <RootNamespace Condition="'$(RootNamespaceOverride)' != ''">$(RootNamespaceOverride)</RootNamespace>
   <AssemblyName Condition="'$(AssemblyNameOverride)' != ''"> $(AssemblyNameOverride)</AssemblyName>
  </PropertyGroup>
  <Target Name="DisplayRootNamespace">
    <Message Importance="High" Text="_GitRoot: $(_GitRoot)" />
    <Message Importance="High" Text="MSBuildProjectFile: $(MSBuildProjectFullPath)" />
    <Message Importance="High" Text="_RelativeNamespace: $(_RelativeNamespace)" />
    <Message Importance="High" Text="_FixedRelativeNamespace: $(_FixedRelativeNamespace)" />
    <Message Importance="High" Text="RootNamespace: $(RootNamespace)" />
    <Message Importance="High" Text="PackageId: $(PackageId)" />
    <Message Importance="High" Text="AssemblyName: $(AssemblyName)" />
  </Target>
</Project>
