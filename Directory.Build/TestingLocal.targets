<!--
 TestingLocal.targets
 
   Created: 2022-10-24-08:10:51
   Modified: 2022-10-29-02:49:20
 
   Author: Justin Chase <justin@justinwritescode.com>
   
   Copyright Â© 2022 Justin Chase, All Rights Reserved
      License: MIT (https://opensource.org/licenses/MIT)
-->

<Project>
  <PropertyGroup>
    <!-- <GetPackageMetadataDependsOn>
    $(GetPackageMetadataDependsOn);
    MinVer
    </GetPackageMetadataDependsOn> -->
  </PropertyGroup>
   <!-- <Target Name="SetOverriddenPackageVersion" AfterTargets="GetPackageVersion" BeforeTargets="GetPackageMetadata" Returns="$(PackageVersion)" Condition="'$(Configuration)' == 'Local'">
    <ItemGroup>
      <PackageVersion Update="$(PackageId)" Version="0.0.1-Local" />
    </ItemGroup>
    <PropertyGroup>
      <PackageVersion>0.0.1-Local</PackageVersion>
      <Version>0.0.1-Local</Version>
      <AssemblyVersion>0.0.1</AssemblyVersion>
      <VersionSuffix>-Local</VersionSuffix>
      <InformationalVersion>0.0.1-Local</InformationalVersion>
    </PropertyGroup>
   </Target> -->

    <Target Name="PushLocal" AfterTargets="Pack" Condition="('$(Configuration)' == 'Local' Or '$(Configuration)' == 'Testing') And '$(GeneratePackageOnBuild)' == 'true'">
        <Exec Command="dotnet nuget delete $(PackageId) $(PackageVersion) -s Local --non-interactive" ContinueOnError="true" />
        <Exec Command="dotnet nuget push $(PackageTargetPath) -s Local" Condition="Exists('$(PackageTargetPath)')" />
    </Target>

   <ItemGroup>
      <_JustinWritesCodePackageReference Include="@(PackageReference)" Condition="$([System.String]::Copy('%(Identity)').StartsWith('JustinWritesCode'))" />
      <PackageReference Update="@(_JustinWritesCodePackageReference)" VersionOverride="0.0.1-Local" />
   </ItemGroup>
</Project>
